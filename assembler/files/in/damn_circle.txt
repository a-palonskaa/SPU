push 0
pop ax
push 0
pop bx
push 0
pop cx
jump:
call check:
push ax
push 5
sub
sqr
push bx
push 4.5
sub
sqr
add
sqrt
push 4.5
call iter:
ja jump:
push 255
pop [cx]
jmp jump:
check:
push ax
push 10
jae stop:
push bx
push 10
jae stop:
ret
stop:
drow
hlt
ret
iter:
push 10
push bx
mul
push ax
add
pop cx
call urg:
push ax
push 1
add
pop ax
push ax
push 10
jb cont:
push 0
pop ax
push bx
push 1
add
pop bx
cont:
ret
urg:
push cx
push 100
jae break:
ret
break:
drow
hlt
ret

